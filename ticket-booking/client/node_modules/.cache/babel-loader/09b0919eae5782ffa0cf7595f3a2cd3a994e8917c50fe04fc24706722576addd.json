{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Siva\\\\Desktop\\\\chatbot-ticket-booking\\\\client\\\\src\\\\components\\\\ChatBot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000');\nfunction ChatBot() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    socket.on('bot message', message => {\n      setMessages(prevMessages => [...prevMessages, {\n        type: 'bot',\n        text: message\n      }]);\n    });\n    socket.on('bot qr', qrImageUrl => {\n      setMessages(prevMessages => [...prevMessages, {\n        type: 'qr',\n        url: qrImageUrl\n      }]);\n    });\n\n    // Auto scroll whenever messages update\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n    return () => {\n      socket.off('bot message');\n      socket.off('bot qr');\n    };\n  }, []);\n  useEffect(() => {\n    var _messagesEndRef$curre2;\n    (_messagesEndRef$curre2 = messagesEndRef.current) === null || _messagesEndRef$curre2 === void 0 ? void 0 : _messagesEndRef$curre2.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  const sendMessage = e => {\n    e.preventDefault();\n    if (input.trim() === '') return;\n    socket.emit('chat message', input);\n    setMessages(prevMessages => [...prevMessages, {\n      type: 'user',\n      text: input\n    }]);\n    setInput('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.chatContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.messagesContainer,\n      children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: msg.type === 'bot' ? styles.botMessage : msg.type === 'user' ? styles.userMessage : styles.qrMessage,\n        children: msg.type === 'qr' ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: msg.url,\n          alt: \"QR Code\",\n          style: {\n            width: '150px',\n            height: '150px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this) : msg.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMessage,\n      style: styles.inputForm,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type your message...\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        style: styles.inputBox\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: styles.sendButton,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatBot, \"5T9mGH1XtiC467pqOMuWw2291HM=\");\n_c = ChatBot;\nconst styles = {\n  chatContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100vh',\n    maxWidth: '600px',\n    margin: '0 auto',\n    padding: '10px',\n    backgroundColor: '#f4f4f4',\n    border: '1px solid #ddd',\n    borderRadius: '8px'\n  },\n  messagesContainer: {\n    flex: 1,\n    overflowY: 'auto',\n    padding: '10px',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  botMessage: {\n    backgroundColor: '#e0f7fa',\n    alignSelf: 'flex-start',\n    padding: '10px',\n    borderRadius: '10px',\n    marginBottom: '8px',\n    maxWidth: '80%'\n  },\n  userMessage: {\n    backgroundColor: '#c8e6c9',\n    alignSelf: 'flex-end',\n    padding: '10px',\n    borderRadius: '10px',\n    marginBottom: '8px',\n    maxWidth: '80%'\n  },\n  qrMessage: {\n    alignSelf: 'center',\n    margin: '10px 0'\n  },\n  inputForm: {\n    display: 'flex',\n    marginTop: '10px'\n  },\n  inputBox: {\n    flex: 1,\n    padding: '10px',\n    fontSize: '16px',\n    borderRadius: '20px',\n    border: '1px solid #ccc',\n    marginRight: '10px'\n  },\n  sendButton: {\n    padding: '10px 20px',\n    fontSize: '16px',\n    borderRadius: '20px',\n    border: 'none',\n    backgroundColor: '#4caf50',\n    color: 'white',\n    cursor: 'pointer'\n  }\n};\nexport default ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","io","jsxDEV","_jsxDEV","socket","ChatBot","_s","messages","setMessages","input","setInput","messagesEndRef","_messagesEndRef$curre","on","message","prevMessages","type","text","qrImageUrl","url","current","scrollIntoView","behavior","off","_messagesEndRef$curre2","sendMessage","e","preventDefault","trim","emit","style","styles","chatContainer","children","messagesContainer","map","msg","index","botMessage","userMessage","qrMessage","src","alt","width","height","fileName","_jsxFileName","lineNumber","columnNumber","ref","onSubmit","inputForm","placeholder","value","onChange","target","inputBox","sendButton","_c","display","flexDirection","maxWidth","margin","padding","backgroundColor","border","borderRadius","flex","overflowY","alignSelf","marginBottom","marginTop","fontSize","marginRight","color","cursor","$RefreshReg$"],"sources":["C:/Users/Siva/Desktop/chatbot-ticket-booking/client/src/components/ChatBot.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport io from 'socket.io-client';\r\n\r\nconst socket = io('http://localhost:5000');\r\n\r\nfunction ChatBot() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState('');\r\n  const messagesEndRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    socket.on('bot message', (message) => {\r\n      setMessages((prevMessages) => [...prevMessages, { type: 'bot', text: message }]);\r\n    });\r\n\r\n    socket.on('bot qr', (qrImageUrl) => {\r\n      setMessages((prevMessages) => [...prevMessages, { type: 'qr', url: qrImageUrl }]);\r\n    });\r\n\r\n    // Auto scroll whenever messages update\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n\r\n    return () => {\r\n      socket.off('bot message');\r\n      socket.off('bot qr');\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messages]);\r\n\r\n  const sendMessage = (e) => {\r\n    e.preventDefault();\r\n    if (input.trim() === '') return;\r\n    socket.emit('chat message', input);\r\n    setMessages((prevMessages) => [...prevMessages, { type: 'user', text: input }]);\r\n    setInput('');\r\n  };\r\n\r\n  return (\r\n    <div style={styles.chatContainer}>\r\n      <div style={styles.messagesContainer}>\r\n        {messages.map((msg, index) => (\r\n          <div key={index} style={msg.type === 'bot' ? styles.botMessage : (msg.type === 'user' ? styles.userMessage : styles.qrMessage)}>\r\n            {msg.type === 'qr' ? (\r\n              <img src={msg.url} alt=\"QR Code\" style={{ width: '150px', height: '150px' }} />\r\n            ) : (\r\n              msg.text\r\n            )}\r\n          </div>\r\n        ))}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n      <form onSubmit={sendMessage} style={styles.inputForm}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Type your message...\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          style={styles.inputBox}\r\n        />\r\n        <button type=\"submit\" style={styles.sendButton}>Send</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  chatContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    height: '100vh',\r\n    maxWidth: '600px',\r\n    margin: '0 auto',\r\n    padding: '10px',\r\n    backgroundColor: '#f4f4f4',\r\n    border: '1px solid #ddd',\r\n    borderRadius: '8px',\r\n  },\r\n  messagesContainer: {\r\n    flex: 1,\r\n    overflowY: 'auto',\r\n    padding: '10px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  botMessage: {\r\n    backgroundColor: '#e0f7fa',\r\n    alignSelf: 'flex-start',\r\n    padding: '10px',\r\n    borderRadius: '10px',\r\n    marginBottom: '8px',\r\n    maxWidth: '80%',\r\n  },\r\n  userMessage: {\r\n    backgroundColor: '#c8e6c9',\r\n    alignSelf: 'flex-end',\r\n    padding: '10px',\r\n    borderRadius: '10px',\r\n    marginBottom: '8px',\r\n    maxWidth: '80%',\r\n  },\r\n  qrMessage: {\r\n    alignSelf: 'center',\r\n    margin: '10px 0',\r\n  },\r\n  inputForm: {\r\n    display: 'flex',\r\n    marginTop: '10px',\r\n  },\r\n  inputBox: {\r\n    flex: 1,\r\n    padding: '10px',\r\n    fontSize: '16px',\r\n    borderRadius: '20px',\r\n    border: '1px solid #ccc',\r\n    marginRight: '10px',\r\n  },\r\n  sendButton: {\r\n    padding: '10px 20px',\r\n    fontSize: '16px',\r\n    borderRadius: '20px',\r\n    border: 'none',\r\n    backgroundColor: '#4caf50',\r\n    color: 'white',\r\n    cursor: 'pointer',\r\n  },\r\n};\r\n\r\nexport default ChatBot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}