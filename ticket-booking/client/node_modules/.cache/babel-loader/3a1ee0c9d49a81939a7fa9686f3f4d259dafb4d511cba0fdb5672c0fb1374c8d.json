{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Siva\\\\Desktop\\\\chatbot-ticket-booking\\\\client\\\\src\\\\components\\\\ChatBot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000'); // Connect to backend server\n\nconst ChatBot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    socket.on('bot message', message => {\n      setMessages(prev => [...prev, {\n        sender: 'bot',\n        text: message\n      }]);\n    });\n    return () => {\n      socket.off('bot message');\n    };\n  }, []);\n  useEffect(() => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  }, [messages]);\n  const sendMessage = () => {\n    if (input.trim() === '') return;\n    setMessages(prev => [...prev, {\n      sender: 'user',\n      text: input\n    }]);\n    socket.emit('chat message', input);\n    setInput('');\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      sendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: '700px',\n      margin: '30px auto',\n      padding: '10px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: 'center',\n        marginBottom: '20px'\n      },\n      children: \"\\uD83C\\uDF9F\\uFE0F Museum Ticket Booking Chatbot \\uD83C\\uDF9F\\uFE0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '1px solid #ccc',\n        borderRadius: '10px',\n        padding: '20px',\n        minHeight: '500px',\n        background: '#f9f9f9',\n        overflowY: 'auto',\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      children: [messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: msg.sender === 'user' ? 'right' : 'left',\n          margin: '10px 0'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            display: 'inline-block',\n            background: msg.sender === 'user' ? '#d4edda' : '#e2e3e5',\n            padding: '12px 18px',\n            borderRadius: '15px',\n            maxWidth: '80%',\n            wordWrap: 'break-word'\n          },\n          children: msg.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        marginTop: '15px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyPress: handleKeyPress,\n        placeholder: \"Type your message...\",\n        style: {\n          flexGrow: 1,\n          padding: '12px',\n          borderRadius: '10px 0 0 10px',\n          border: '1px solid #ccc',\n          outline: 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        style: {\n          padding: '0 25px',\n          background: '#4CAF50',\n          color: 'white',\n          border: 'none',\n          borderRadius: '0 10px 10px 0',\n          cursor: 'pointer'\n        },\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBot, \"ABrHAQDP7g0qYpnOwslR1WwKacs=\");\n_c = ChatBot;\nexport default ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","io","jsxDEV","_jsxDEV","socket","ChatBot","_s","messages","setMessages","input","setInput","messagesEndRef","on","message","prev","sender","text","off","current","scrollIntoView","behavior","sendMessage","trim","emit","handleKeyPress","e","key","style","maxWidth","margin","padding","children","textAlign","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","border","borderRadius","minHeight","background","overflowY","display","flexDirection","map","msg","idx","wordWrap","ref","marginTop","type","value","onChange","target","onKeyPress","placeholder","flexGrow","outline","onClick","color","cursor","_c","$RefreshReg$"],"sources":["C:/Users/Siva/Desktop/chatbot-ticket-booking/client/src/components/ChatBot.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\n\r\nconst socket = io('http://localhost:5000'); // Connect to backend server\r\n\r\nconst ChatBot = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n  const messagesEndRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    socket.on('bot message', (message) => {\r\n      setMessages((prev) => [...prev, { sender: 'bot', text: message }]);\r\n    });\r\n\r\n    return () => {\r\n      socket.off('bot message');\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (messagesEndRef.current) {\r\n      messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n  }, [messages]);\r\n\r\n  const sendMessage = () => {\r\n    if (input.trim() === '') return;\r\n\r\n    setMessages((prev) => [...prev, { sender: 'user', text: input }]);\r\n    socket.emit('chat message', input);\r\n    setInput('');\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      sendMessage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ maxWidth: '700px', margin: '30px auto', padding: '10px' }}>\r\n      <h2 style={{ textAlign: 'center', marginBottom: '20px' }}>üéüÔ∏è Museum Ticket Booking Chatbot üéüÔ∏è</h2>\r\n\r\n      <div style={{\r\n        border: '1px solid #ccc',\r\n        borderRadius: '10px',\r\n        padding: '20px',\r\n        minHeight: '500px',\r\n        background: '#f9f9f9',\r\n        overflowY: 'auto',\r\n        display: 'flex',\r\n        flexDirection: 'column'\r\n      }}>\r\n        {messages.map((msg, idx) => (\r\n          <div key={idx} style={{\r\n            textAlign: msg.sender === 'user' ? 'right' : 'left',\r\n            margin: '10px 0'\r\n          }}>\r\n            <span style={{\r\n              display: 'inline-block',\r\n              background: msg.sender === 'user' ? '#d4edda' : '#e2e3e5',\r\n              padding: '12px 18px',\r\n              borderRadius: '15px',\r\n              maxWidth: '80%',\r\n              wordWrap: 'break-word'\r\n            }}>\r\n              {msg.text}\r\n            </span>\r\n          </div>\r\n        ))}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n\r\n      <div style={{ display: 'flex', marginTop: '15px' }}>\r\n        <input\r\n          type=\"text\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          onKeyPress={handleKeyPress}\r\n          placeholder=\"Type your message...\"\r\n          style={{\r\n            flexGrow: 1,\r\n            padding: '12px',\r\n            borderRadius: '10px 0 0 10px',\r\n            border: '1px solid #ccc',\r\n            outline: 'none'\r\n          }}\r\n        />\r\n        <button\r\n          onClick={sendMessage}\r\n          style={{\r\n            padding: '0 25px',\r\n            background: '#4CAF50',\r\n            color: 'white',\r\n            border: 'none',\r\n            borderRadius: '0 10px 10px 0',\r\n            cursor: 'pointer'\r\n          }}\r\n        >\r\n          Send\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatBot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}