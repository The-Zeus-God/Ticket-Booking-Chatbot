{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Siva\\\\Desktop\\\\chatbot-ticket-booking\\\\client\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from \"react\";\nimport { ThemeContext } from \"../App\"; // Import the ThemeContext\nimport ChatBot from \"./ChatBot\"; // Your existing chatbot\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat() {\n  _s();\n  const {\n    theme\n  } = useContext(ThemeContext); // Get the current theme from context\n\n  // Define the default light theme (green and white) styles\n  const lightThemeStyle = {\n    backgroundColor: \"#white\",\n    // Light background color (greenish theme for light)\n    color: \"#2E8B57\" // Green text color for light theme\n  };\n\n  // Define the dark theme styles\n  const darkThemeStyle = {\n    backgroundColor: \"#121212\",\n    // Dark background color\n    color: \"#ffffff\" // White text color for dark theme\n  };\n\n  // Set the container style based on the current theme\n  const containerStyle = theme === \"dark\" ? darkThemeStyle : lightThemeStyle;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: containerStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"Start Chatting with PEAS!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatBot, {\n      isDarkTheme: theme === \"dark\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"LidUGjXGvl6nqLnPI8yC77ot4bM=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useContext","ThemeContext","ChatBot","jsxDEV","_jsxDEV","Chat","_s","theme","lightThemeStyle","backgroundColor","color","darkThemeStyle","containerStyle","style","children","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","isDarkTheme","_c","$RefreshReg$"],"sources":["C:/Users/Siva/Desktop/chatbot-ticket-booking/client/src/components/Chat.js"],"sourcesContent":["import React, { useContext } from \"react\";\r\nimport { ThemeContext } from \"../App\"; // Import the ThemeContext\r\nimport ChatBot from \"./ChatBot\"; // Your existing chatbot\r\n\r\nfunction Chat() {\r\n  const { theme } = useContext(ThemeContext); // Get the current theme from context\r\n\r\n  // Define the default light theme (green and white) styles\r\n  const lightThemeStyle = {\r\n    backgroundColor: \"#white\", // Light background color (greenish theme for light)\r\n    color: \"#2E8B57\", // Green text color for light theme\r\n  };\r\n\r\n  // Define the dark theme styles\r\n  const darkThemeStyle = {\r\n    backgroundColor: \"#121212\", // Dark background color\r\n    color: \"#ffffff\", // White text color for dark theme\r\n  };\r\n\r\n  // Set the container style based on the current theme\r\n  const containerStyle = theme === \"dark\" ? darkThemeStyle : lightThemeStyle;\r\n\r\n  return (\r\n    <div style={containerStyle}>\r\n      <h2 style={{ textAlign: \"center\" }}>Start Chatting with PEAS!</h2>\r\n      <ChatBot isDarkTheme={theme === \"dark\"} /> {/* Pass the theme to ChatBot */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,YAAY,QAAQ,QAAQ,CAAC,CAAC;AACvC,OAAOC,OAAO,MAAM,WAAW,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM;IAAEC;EAAM,CAAC,GAAGP,UAAU,CAACC,YAAY,CAAC,CAAC,CAAC;;EAE5C;EACA,MAAMO,eAAe,GAAG;IACtBC,eAAe,EAAE,QAAQ;IAAE;IAC3BC,KAAK,EAAE,SAAS,CAAE;EACpB,CAAC;;EAED;EACA,MAAMC,cAAc,GAAG;IACrBF,eAAe,EAAE,SAAS;IAAE;IAC5BC,KAAK,EAAE,SAAS,CAAE;EACpB,CAAC;;EAED;EACA,MAAME,cAAc,GAAGL,KAAK,KAAK,MAAM,GAAGI,cAAc,GAAGH,eAAe;EAE1E,oBACEJ,OAAA;IAAKS,KAAK,EAAED,cAAe;IAAAE,QAAA,gBACzBV,OAAA;MAAIS,KAAK,EAAE;QAAEE,SAAS,EAAE;MAAS,CAAE;MAAAD,QAAA,EAAC;IAAyB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClEf,OAAA,CAACF,OAAO;MAACkB,WAAW,EAAEb,KAAK,KAAK;IAAO;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,KAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEV;AAACb,EAAA,CAxBQD,IAAI;AAAAgB,EAAA,GAAJhB,IAAI;AA0Bb,eAAeA,IAAI;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}