{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Siva\\\\Desktop\\\\chatbot-ticket-booking\\\\client\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from \"react\";\nimport { ThemeContext } from \"../App\"; // Import the ThemeContext\nimport ChatBot from \"./ChatBot\"; // Your existing chatbot\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat() {\n  _s();\n  const {\n    theme\n  } = useContext(ThemeContext); // Get the current theme from context\n\n  const containerStyle = {\n    padding: \"20px\",\n    backgroundColor: theme === \"dark\" ? \"#121212\" : \"#f7f7f7\",\n    // Set background color based on theme\n    minHeight: \"100vh\" // Ensure the container fills the entire height of the screen\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: containerStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Start Chatting with PEAS!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatBot, {\n      isDarkTheme: theme === \"dark\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"LidUGjXGvl6nqLnPI8yC77ot4bM=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useContext","ThemeContext","ChatBot","jsxDEV","_jsxDEV","Chat","_s","theme","containerStyle","padding","backgroundColor","minHeight","style","children","fileName","_jsxFileName","lineNumber","columnNumber","isDarkTheme","_c","$RefreshReg$"],"sources":["C:/Users/Siva/Desktop/chatbot-ticket-booking/client/src/components/Chat.js"],"sourcesContent":["import React, { useContext } from \"react\";\r\nimport { ThemeContext } from \"../App\"; // Import the ThemeContext\r\nimport ChatBot from \"./ChatBot\"; // Your existing chatbot\r\n\r\nfunction Chat() {\r\n  const { theme } = useContext(ThemeContext); // Get the current theme from context\r\n\r\n  const containerStyle = {\r\n    padding: \"20px\",\r\n    backgroundColor: theme === \"dark\" ? \"#121212\" : \"#f7f7f7\", // Set background color based on theme\r\n    minHeight: \"100vh\", // Ensure the container fills the entire height of the screen\r\n  };\r\n\r\n  return (\r\n    <div style={containerStyle}>\r\n      <h2>Start Chatting with PEAS!</h2>\r\n      <ChatBot isDarkTheme={theme === \"dark\"} /> {/* Pass the theme to ChatBot */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,YAAY,QAAQ,QAAQ,CAAC,CAAC;AACvC,OAAOC,OAAO,MAAM,WAAW,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM;IAAEC;EAAM,CAAC,GAAGP,UAAU,CAACC,YAAY,CAAC,CAAC,CAAC;;EAE5C,MAAMO,cAAc,GAAG;IACrBC,OAAO,EAAE,MAAM;IACfC,eAAe,EAAEH,KAAK,KAAK,MAAM,GAAG,SAAS,GAAG,SAAS;IAAE;IAC3DI,SAAS,EAAE,OAAO,CAAE;EACtB,CAAC;EAED,oBACEP,OAAA;IAAKQ,KAAK,EAAEJ,cAAe;IAAAK,QAAA,gBACzBT,OAAA;MAAAS,QAAA,EAAI;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClCb,OAAA,CAACF,OAAO;MAACgB,WAAW,EAAEX,KAAK,KAAK;IAAO;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,KAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEV;AAACX,EAAA,CAfQD,IAAI;AAAAc,EAAA,GAAJd,IAAI;AAiBb,eAAeA,IAAI;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}