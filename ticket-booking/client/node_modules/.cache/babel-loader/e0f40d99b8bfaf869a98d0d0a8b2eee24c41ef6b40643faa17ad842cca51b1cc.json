{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Siva\\\\Desktop\\\\chatbot-ticket-booking\\\\client\\\\src\\\\components\\\\ChatBot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000'); // Backend server\n\nconst ChatBot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    socket.on('bot message', message => {\n      setMessages(prev => [...prev, {\n        sender: 'bot',\n        text: message\n      }]);\n    });\n    return () => {\n      socket.off('bot message');\n    };\n  }, []);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    // Always scroll to the bottom when messages update\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  const sendMessage = () => {\n    if (input.trim() === '') return;\n    setMessages(prev => [...prev, {\n      sender: 'user',\n      text: input\n    }]);\n    socket.emit('chat message', input);\n    setInput('');\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      sendMessage();\n    }\n  };\n\n  // Check if message is a QR code\n  const isQRCode = text => {\n    return text.startsWith('data:image/png;base64');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: '600px',\n      margin: 'auto',\n      marginTop: '30px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"\\uD83C\\uDF9F\\uFE0F Museum Ticket Chatbot - PEAS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '1px solid gray',\n        padding: '20px',\n        minHeight: '400px',\n        height: '400px',\n        overflowY: 'auto',\n        backgroundColor: '#f9f9f9',\n        borderRadius: '10px'\n      },\n      children: [messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: msg.sender === 'user' ? 'right' : 'left',\n          margin: '10px 0'\n        },\n        children: isQRCode(msg.text) ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: msg.text,\n          alt: \"QR Code\",\n          style: {\n            width: '150px',\n            height: '150px',\n            display: 'inline-block',\n            margin: '5px',\n            border: '1px solid #ccc',\n            borderRadius: '10px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            display: 'inline-block',\n            background: msg.sender === 'user' ? '#c8e6c9' : '#e0e0e0',\n            padding: '10px',\n            borderRadius: '10px',\n            maxWidth: '70%',\n            wordBreak: 'break-word'\n          },\n          children: msg.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        marginTop: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyPress: handleKeyPress,\n        placeholder: \"Type your message...\",\n        style: {\n          flexGrow: 1,\n          padding: '10px',\n          borderRadius: '5px',\n          border: '1px solid gray'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        style: {\n          padding: '10px 20px',\n          marginLeft: '10px',\n          background: 'green',\n          color: 'white',\n          border: 'none',\n          borderRadius: '5px'\n        },\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBot, \"ABrHAQDP7g0qYpnOwslR1WwKacs=\");\n_c = ChatBot;\nexport default ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","io","jsxDEV","_jsxDEV","socket","ChatBot","_s","messages","setMessages","input","setInput","messagesEndRef","on","message","prev","sender","text","off","_messagesEndRef$curre","current","scrollIntoView","behavior","sendMessage","trim","emit","handleKeyPress","e","key","isQRCode","startsWith","style","maxWidth","margin","marginTop","children","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","border","padding","minHeight","height","overflowY","backgroundColor","borderRadius","map","msg","idx","src","alt","width","display","background","wordBreak","ref","type","value","onChange","target","onKeyPress","placeholder","flexGrow","onClick","marginLeft","color","_c","$RefreshReg$"],"sources":["C:/Users/Siva/Desktop/chatbot-ticket-booking/client/src/components/ChatBot.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\n\r\nconst socket = io('http://localhost:5000'); // Backend server\r\n\r\nconst ChatBot = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n  const messagesEndRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    socket.on('bot message', (message) => {\r\n      setMessages((prev) => [...prev, { sender: 'bot', text: message }]);\r\n    });\r\n\r\n    return () => {\r\n      socket.off('bot message');\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Always scroll to the bottom when messages update\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messages]);\r\n\r\n  const sendMessage = () => {\r\n    if (input.trim() === '') return;\r\n\r\n    setMessages((prev) => [...prev, { sender: 'user', text: input }]);\r\n    socket.emit('chat message', input);\r\n    setInput('');\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      sendMessage();\r\n    }\r\n  };\r\n\r\n  // Check if message is a QR code\r\n  const isQRCode = (text) => {\r\n    return text.startsWith('data:image/png;base64');\r\n  };\r\n\r\n  return (\r\n    <div style={{ maxWidth: '600px', margin: 'auto', marginTop: '30px' }}>\r\n      <h2 style={{ textAlign: 'center' }}>üéüÔ∏è Museum Ticket Chatbot - PEAS</h2>\r\n\r\n      <div style={{\r\n        border: '1px solid gray',\r\n        padding: '20px',\r\n        minHeight: '400px',\r\n        height: '400px',\r\n        overflowY: 'auto',\r\n        backgroundColor: '#f9f9f9',\r\n        borderRadius: '10px'\r\n      }}>\r\n        {messages.map((msg, idx) => (\r\n          <div key={idx} style={{\r\n            textAlign: msg.sender === 'user' ? 'right' : 'left',\r\n            margin: '10px 0'\r\n          }}>\r\n            {isQRCode(msg.text) ? (\r\n              <img \r\n                src={msg.text} \r\n                alt=\"QR Code\" \r\n                style={{\r\n                  width: '150px',\r\n                  height: '150px',\r\n                  display: 'inline-block',\r\n                  margin: '5px',\r\n                  border: '1px solid #ccc',\r\n                  borderRadius: '10px'\r\n                }}\r\n              />\r\n            ) : (\r\n              <span style={{\r\n                display: 'inline-block',\r\n                background: msg.sender === 'user' ? '#c8e6c9' : '#e0e0e0',\r\n                padding: '10px',\r\n                borderRadius: '10px',\r\n                maxWidth: '70%',\r\n                wordBreak: 'break-word'\r\n              }}>\r\n                {msg.text}\r\n              </span>\r\n            )}\r\n          </div>\r\n        ))}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n\r\n      <div style={{ display: 'flex', marginTop: '10px' }}>\r\n        <input\r\n          type=\"text\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          onKeyPress={handleKeyPress}\r\n          placeholder=\"Type your message...\"\r\n          style={{ flexGrow: 1, padding: '10px', borderRadius: '5px', border: '1px solid gray' }}\r\n        />\r\n        <button \r\n          onClick={sendMessage} \r\n          style={{ padding: '10px 20px', marginLeft: '10px', background: 'green', color: 'white', border: 'none', borderRadius: '5px' }}\r\n        >\r\n          Send\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatBot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}